generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model qr_code {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(256)
  description String?   @db.Text
  active      Boolean   @default(true)
  archived    Boolean   @default(false)
  youtube_title String? @db.VarChar(256)
  youtube_url String?   @db.VarChar(256)
  pdf_url     String?    @db.VarChar(256)
  author      String   @db.VarChar(256)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
  qr_code_log qr_code_log[]
  documents      document[]     @relation("QRCodeDocument")
}

model qr_code_log {
  id          Int       @id @default(autoincrement())
  qr_code_id  Int
  version     Int       @default(autoincrement())
  title       String    @db.VarChar(256)
  description String?   @db.Text
  active      Boolean   @default(true)
  archived    Boolean   @default(false)
  youtube_title String? @db.VarChar(256)
  youtube_url String?   @db.VarChar(256)
  pdf_url     String?   @db.VarChar(256)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
  qr_code     qr_code   @relation(fields: [qr_code_id], references: [id], onDelete: Cascade)
}

model document {
  id         Int       @id @default(autoincrement())
  qr_code_id Int?
  title      String    @db.VarChar(256)
  content    String?   @db.Text
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @updatedAt @db.Timestamp(6)
  qr_code    qr_code?  @relation("QRCodeDocument", fields: [qr_code_id], references: [id])
}